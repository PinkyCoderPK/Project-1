#include<bits/stdc++.h>
using namespace std;

string s;
int x, y;
int root, vt = 0, d[100005];
vector<int> g[100005];

void preOrder (int u)
{
    cout << u <<" ";
    for (auto v : g[u])
        preOrder(v);
}

void postOrder (int u)
{
    for (auto v : g[u])
        postOrder(v);
    cout << u <<" ";
}

void inOrder (int u, int  k)
{
    for (int i = 0; i < g[u].size(); i++)
    {
        inOrder(g[u][i], k);
        if ( d[g[u][i]] != k )
            d[g[u][i]] = k, cout << g[u][i] <<" ";
        if ( i == 0 && d[u] != k )
            d[u] = k, cout << u <<" ";
    }

}

int main()
{
    // Week 3 - Tree manipulation & Traversal
    //freopen("code.inp","r",stdin);
    //freopen("code.out","w",stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    while ( cin >> s )
    {
        if ( s == "*" ) return 0;
        if ( s == "MakeRoot" )
        {
            cin >> x;
            root = x;
        }
        else if ( s == "Insert" )
        {
            cin >> x >> y;
            g[y].push_back(x);
        }
        else if ( s == "PreOrder" )
            preOrder(root), cout <<"\n";
        else if ( s == "InOrder" )
            inOrder(root, ++vt), cout <<"\n";
        else
            postOrder(root), cout <<"\n";
    }
}
